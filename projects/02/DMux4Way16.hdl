/**
 * 4-way 16-bit demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way16 {
    IN in[16], sel[2];
    OUT a[16], b[16], c[16], d[16];

    PARTS:
    // Put your code here:
    DMux(in=in[0], sel=sel[1], a=aORb0, b=cORd0);
    DMux(in=aORb0, sel=sel[0], a=a[0], b=b[0]);
    DMux(in=cORd0, sel=sel[0], a=c[0], b=d[0]);

	DMux(in=in[1], sel=sel[1], a=aORb1, b=cORd1);
    DMux(in=aORb1, sel=sel[0], a=a[1], b=b[1]);
    DMux(in=cORd1, sel=sel[0], a=c[1], b=d[1]);

    DMux(in=in[2], sel=sel[1], a=aORb2, b=cORd2);
    DMux(in=aORb2, sel=sel[0], a=a[2], b=b[2]);
    DMux(in=cORd2, sel=sel[0], a=c[2], b=d[2]);

    DMux(in=in[3], sel=sel[1], a=aORb3, b=cORd3);
    DMux(in=aORb3, sel=sel[0], a=a[3], b=b[3]);
    DMux(in=cORd3, sel=sel[0], a=c[3], b=d[3]);

    DMux(in=in[4], sel=sel[1], a=aORb4, b=cORd4);
    DMux(in=aORb4, sel=sel[0], a=a[4], b=b[4]);
    DMux(in=cORd4, sel=sel[0], a=c[4], b=d[4]);

    DMux(in=in[5], sel=sel[1], a=aORb5, b=cORd5);
    DMux(in=aORb5, sel=sel[0], a=a[5], b=b[5]);
    DMux(in=cORd5, sel=sel[0], a=c[5], b=d[5]);

    DMux(in=in[6], sel=sel[1], a=aORb6, b=cORd6);
    DMux(in=aORb6, sel=sel[0], a=a[6], b=b[6]);
    DMux(in=cORd6, sel=sel[0], a=c[6], b=d[6]);

    DMux(in=in[7], sel=sel[1], a=aORb7, b=cORd7);
    DMux(in=aORb7, sel=sel[0], a=a[7], b=b[7]);
    DMux(in=cORd7, sel=sel[0], a=c[7], b=d[7]);

    DMux(in=in[8], sel=sel[1], a=aORb8, b=cORd8);
    DMux(in=aORb8, sel=sel[0], a=a[8], b=b[8]);
    DMux(in=cORd8, sel=sel[0], a=c[8], b=d[8]);

    DMux(in=in[9], sel=sel[1], a=aORb9, b=cORd9);
    DMux(in=aORb9, sel=sel[0], a=a[9], b=b[9]);
    DMux(in=cORd9, sel=sel[0], a=c[9], b=d[9]);

    DMux(in=in[10], sel=sel[1], a=aORb10, b=cORd10);
    DMux(in=aORb10, sel=sel[0], a=a[10], b=b[10]);
    DMux(in=cORd10, sel=sel[0], a=c[10], b=d[10]);

    DMux(in=in[11], sel=sel[1], a=aORb11, b=cORd11);
    DMux(in=aORb11, sel=sel[0], a=a[11], b=b[11]);
    DMux(in=cORd11, sel=sel[0], a=c[11], b=d[11]);

    DMux(in=in[12], sel=sel[1], a=aORb12, b=cORd12);
    DMux(in=aORb12, sel=sel[0], a=a[12], b=b[12]);
    DMux(in=cORd12, sel=sel[0], a=c[12], b=d[12]);

    DMux(in=in[13], sel=sel[1], a=aORb13, b=cORd13);
    DMux(in=aORb13, sel=sel[0], a=a[13], b=b[13]);
    DMux(in=cORd13, sel=sel[0], a=c[13], b=d[13]);

    DMux(in=in[14], sel=sel[1], a=aORb14, b=cORd14);
    DMux(in=aORb14, sel=sel[0], a=a[14], b=b[14]);
    DMux(in=cORd14, sel=sel[0], a=c[14], b=d[14]);

    DMux(in=in[15], sel=sel[1], a=aORb15, b=cORd15);
    DMux(in=aORb15, sel=sel[0], a=a[15], b=b[15]);
    DMux(in=cORd15, sel=sel[0], a=c[15], b=d[15]);
}